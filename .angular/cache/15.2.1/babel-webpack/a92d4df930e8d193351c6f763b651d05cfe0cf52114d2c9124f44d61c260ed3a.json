{"ast":null,"code":"import { DOCUMENT } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nexport class JsonLDService {\n  orgSchema() {\n    return {\n      '@context': 'https://schema.org',\n      '@type': 'Organization',\n      'name': 'Moon Koradji Records',\n      'url': 'https://www.moonkoradji.com',\n      'sameAs': ['https://www.facebook.com/MoonKoradjiRecords', 'https://soundcloud.com/moon-koradji-records', 'https://www.youtube.com/user/MoonKoradji', 'https://moonkoradjirecords.bandcamp.com/'],\n      'logo': 'https://www.moonkoradji.com/assets/images/mk_square.jpg',\n      'image': 'https://www.moonkoradji.com/assets/images/mk_square.jpg',\n      'description': 'Ukrainian psytrance label founded in 2007 by Alexandr Nikienko a.k.a. DJ Omsun.',\n      'email': 'info@moonkoradji.com',\n      'member': [{\n        '@type': 'OrganizationRole',\n        'member': {\n          '@type': 'Person',\n          'name': 'Omsun',\n          'givenName': 'Alexandr Nikienko',\n          'sameAs': ['https://moonkoradji.com/artists/dj-omsun', 'https://www.facebook.com/omsunkoradji', 'https://soundcloud.com/moonkoradji', 'https://www.instagram.com/omsunkoradji']\n        },\n        'roleName': ['Founder', 'DJ']\n      }]\n    };\n  }\n  constructor(_document) {\n    this._document = _document;\n    this.scriptType = 'application/json+ld';\n  }\n  removeStructuredData() {\n    const els = [];\n    ['structured-data', 'structured-data-org'].forEach(c => {\n      els.push(...Array.from(this._document.head.getElementsByClassName(c)));\n    });\n    els.forEach(el => this._document.head.removeChild(el));\n  }\n  insertSchema(schema, className = 'structured-data') {\n    // console.log(this.orgSchema())\n    let script;\n    let shouldAppend = false;\n    if (this._document.head.getElementsByClassName(className).length) {\n      script = this._document.head.getElementsByClassName(className)[0];\n    } else {\n      script = this._document.createElement('script');\n      shouldAppend = true;\n    }\n    script.setAttribute('class', className);\n    script.type = this.scriptType;\n    script.text = JSON.stringify(schema.call(this));\n    if (shouldAppend) {\n      this._document.head.appendChild(script);\n    }\n  }\n  static #_ = this.ɵfac = function JsonLDService_Factory(t) {\n    return new (t || JsonLDService)(i0.ɵɵinject(DOCUMENT));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: JsonLDService,\n    factory: JsonLDService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}